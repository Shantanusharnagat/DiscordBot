<!DOCTYPE html>
<html lang="en">
  <head>
    
    <!-- 
      This is the main Handlebars template for the site 
      - When the user visits the homepage or submits a choice the app calls the endpoints in server.js
      - The server script passes data in here and the Handlebars code builds it into the HTML page
    -->
    
    <meta charset="utf-8" />
    <link rel="icon" href="https://glitch.com/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{{seo.title}}</title>
    
    <!-- Meta tags for SEO and social sharing -->
    <link rel="canonical" href="{{seo.url}}">
    <meta name="description" content="{{seo.description}}">
    <meta property="og:title" content="{{seo.title}}">
    <meta property="og:type" content="article">
    <meta property="og:url" content="{{seo.url}}">
    <meta property="og:description" content="{{seo.description}}">
    <meta property="og:image" content="{{seo.image}}">
    <meta name="twitter:card" content="summary">

    <!-- Import the webpage's stylesheet -->
    <link rel="stylesheet" href="/style.css" />
    
    <!-- Show choice chart on poll submission -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script type="text/javascript">
      /*
      The chart uses chart.js - try tweaking the config!
      https://www.chartjs.org/docs/3.0.2/charts/doughnut.html
      */
    function showChart(choices, picks){
      // We pass the choices and picks arrays from the page when the server script returns them
      var ctx = document.getElementById('myChart');
      var myLineChart = new Chart(ctx, {
        type: "doughnut",
        responsive: true,
        data: {
          labels: choices,
          datasets: [{
            data: picks,
            backgroundColor: ["#05DA84", "#E6E656", "#E5AED6"],
            borderColor: "#ffffff",
            fill: true,
            hoverOffset: 12,
            cutout: "60%"
          }]
        },
        options: {
          plugins: {
            legend: { 
              display: true,
              position: "bottom",
              labels: {
                padding: 24
              }
            }
          },
          layout: {
            padding: 24
          }
        }
      });
    }
    </script>
    
    <link rel="dns-prefetch" href="https://fonts.googleapis.com/">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Kanit:wght@700&amp;family=Roboto:wght@300;400;500;900&amp;display=swap">
  </head>
  <body>
    <div class="wrapper">
      <div class="content" role="main">
          
        <!-- This is the start of content for our page -->
        <div class="logo-block">
          <img src="https://auth.cloud.datastax.com/auth/resources/dah2r/login/cloud/img/datastax-white-logo.svg" alt="DataStax" class="logo-datastax" />
          ✕
          <img src="https://cdn.glitch.com/ae313032-8fbd-4b72-bdc1-d5a86e415b34%2FGlitchLogo_White_Wordmark.svg?v=1622574463535" alt="Glitch" class="logo-glitch" />       
        </div>

        <h1>Hello Astra DB!</h1>
          <p>
            The easiest Cassandra ever. A simple poll using Chart.js and powered by the <strong>DataStax Astra</strong> cloud database. Built in Node.js, instantly remixable on Glitch.
          </p>
          <!-- Server returns a flag when the user has submitted a choice and we show the results -->
          {{#if results}}
            <h2>
              Results
            </h2>
            <div class="poll-results">
              <p>
                Submissions so far (see the <a href="/logs">Admin</a> page for a log):
              </p>
              <p>
                <!-- Pass arrays from the API to the chart js script in the page head -->
                <canvas id="myChart"></canvas>
                <script type="text/javascript">
                  showChart("{{{ optionNames }}}".split(","), "{{{ optionCounts }}}".split(","));
                </script>
              </p>
              <!-- If the user hasn't already made a choice we show the poll -->
            </div>
          {{else}}
            <h2>
              Poll
            </h2>
            <div class="poll-form">
              {{#if optionNames}}
                <p>
                  What do you like coding most?
                </p>
                <!-- Call the server post endpoint when the user submits an option in the poll -->
                <form method="post" action="/">
                  <!-- The server script returns the list of language options to offer in the poll -->
                  {{#each optionNames}}
                  <input type="radio" id="{{this}}" name="optionName" value="{{this}}" required/>
                  <label for="{{this}}">{{this}}</label>
                  {{/each}}
                  <br/><br/>
                  <button type="submit">
                    Submit
                  </button>
                </form>
              <!-- ADD LINK FROM README NEXT STEPS -->
              
              <!-- On first remix you need to setup your DB–see the README -->
              {{else}}
                <div class="setup-instructions">
                  <div class="setup-column">
                    <canvas id="myChart" class="setup"></canvas>
                    <script type="text/javascript">
                      showChart(["Finish","Setup","README.md"], [1,2,3]);
                    </script>
                  </div>
                  <div class="setup-column">
                    <p>
                      It looks like there's a little setup needed. If this is a new remix, 
                      check the <strong>README.md</strong> file in the Glitch editor for more
                      instructions and next steps. 
                    </p>
                    <p>
                      You'll be up and running in about five minutes!
                    </p>
                  </div>
                </div>
              {{/if}}
            </div>
          {{/if}}
        
        <!-- Instructions on using this project -->
        <div class="instructions">
          <h2>
            Using this project
          </h2>
          <p>
            This app was based on the Glitch <strong>Hello SQLite</strong> project, but
            showing the power of a persistent cloud database using DataStax Astra. Check out 
            README.md in the editor for more info and next steps you can take!
          </p>
        </div>
        
      </div>
    </div>
    
    <!-- The footer holds our remix button — you can use it for structure or cut it out ✂ -->
    <footer class="footer">
      <div class="links"></div>
      <a href="/">Home</a>
      <span class="divider">|</span>
      <a href="/logs">Admin</a>
      <a
        class="btn--remix"
        target="_top"
        href="https://glitch.com/edit/#!/remix/datastax-hello-astra"
      >
        <img
          src="https://cdn.glitch.com/605e2a51-d45f-4d87-a285-9410ad350515%2FLogo_Color.svg?v=1618199565140"
          alt=""
        />
        Remix on Glitch
      </a>
    </footer>
  </body>
</html>
